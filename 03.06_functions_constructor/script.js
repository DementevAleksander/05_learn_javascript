'use strict';
//ES5
function User(name, id) { //Для каждого конкретного пользователя будем указывать уникальные имя и номер.
      this.name = name;
      this.id = id;
      this.human = true; //все пользователи - люди.
      //такая функция стала конструктором. С её помощью можно создать новых пользователей.
      //кроме свойств можно записать методы.
      this.hello = function () {
            console.log(`Hello, ${this.name}`); //можно использовать свойства, которые находятся в этом же объекте.
      };
}

//prototype - при помощи него, можно создавать новые свойства или методы в конструктор, они будут прототипно наследоваться у потомков. Этот способ используется, если по каким-то причинам нельзя менять родительский объект, но его нужно модифицировать.
User.prototype.exit = function () { //пользователь выходит из системы.
      console.log(`Пользователь, ${this.name} ушёл домойки!`);
};


const ivan = new User('Ivan', 28); //new содаёт новый объект с теми свойствами, которые мы задали.
const alex = new User('Alex', 48);

ivan.exit();

ivan.hello();
alex.hello();
console.log(ivan);
console.log(alex);