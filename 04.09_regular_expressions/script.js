'use strict';
// Регулярные выражения – мощный способ поиска и замены для строк.
// Регулярное выражение состоит из двух частей - pattern (шаблон, шаблон того, что мы ищем в этой строке или что пытаемся изменить) и flags.

// new ReqExp('pattern', 'flags'); // Создаём регулярное выражение.
// /pattern/flags //Упращённый синтаксис регулярного выражения.

//Метод search
const ans = prompt('Введите ваше имя:');
const reg = /n/; // /n/ - pattern, шаблон того, что мы ищем.
console.log(ans.search(reg)); //В консоле вводим ANn. Получаем 2 - вторая позиция, по которой нашли результат (искали маленькую n).

//flags - есть три флага. 
// i - ищем что-то вне зависимости от регистра.
// g - ищем несколько вхождений.
// m - многострочный режим.
// Флаги можно комбинировать igm.

const reg1 = /n/i; // /n/ - pattern, шаблон того, что мы ищем. /i - паттерг.
console.log(ans.search(reg1)); //В консоле вводим ANn. Получаем 1 - первая позиция, по которой нашли результат (искали n вне зависимости от регистра).

//Метод match
console.log(ans.match(reg1)); //В консоль получили объект (массив данных) JS.
// 0: "N"
// groups: undefined
// index: 1
// input: "ANn"
// length: 1
// __proto__: Array(0)

//Получаем все елементы.
const reg2 = /n/ig; //Добавили флаг глобальностии g.
console.log(ans.match(reg2)); //В консоль ввели ANnNNN. Получили объект (массив данных) JS.
// 0: "N"
// 1: "n"
// 2: "N"
// 3: "N"
// 4: "N"
// length: 5
// __proto__: Array(0)

//Метод replace - берёт часть строки и заменяет его на другое выражение.
const pass = prompt('Введите ваш пароль:');
console.log(pass.replace(/./g, "*")); // /./g - Берём все элементы, которые попадут в строку. "*" - заменяем все символы на *. Вводим Привет, получаем ******.
console.log(pass.replace(/\./g, "*")); // \-экранирование. Ввели Привет....... , получили Привет*******.
console.log('12-10-2020'.replace(/-/g, '.')); //Меняем - на . . В консоль получчаем 12.10.2020.

//У регулярного выражения, как и у любого объекта есть свои методы.
//Метод test.
const ans2 = prompt('Введите ваше имя:');
const reg3 = /n/ig;
console.log(reg3.test(ans2)); //Есть ли что-то похожее на паттерн, который внутри регулярного выражения. Метод возвращает либо true, либо false. Вводим AnNN, в консоль получаем True, вводим Анна, получаем false.

//Иногда нужно искать целый класс символов.
// Класс digets. \d - ищем цифры.
// Класс word. \w - ищем все слова, все буквы.
// Класс spaces. \s - ищем все пробелы.

const ans3 = prompt('Введите число:');
const reg4 = /\d/; // ищем только числа.
console.log(ans3.match(reg4)); //Вводим Привет, 4 человека. Вас 89 человек. В консоль получаем объект.
// 0: "4"
// groups: undefined
// index: 8
// input: "Привет, 4 человека. Вас 89 человек."
// length: 1
// __proto__: Array(0)

const reg5 = /\d/g;
console.log(ans3.match(reg5)); //Вели 200px, получили в консоль массив.
// 0: "2"
// 1: "0"
// 2: "0"
// length: 3
// __proto__: Array(0)

const str = 'Моё имя R2D2';
console.log(str.match(/\w\d\w\d/i)); //Ищем букву, цифру, букву, цифру вне зависимости от регистра.
// 0: "R2D2"
// groups: undefined
// index: 8
// input: "Моё имя R2D2"
// length: 1
// __proto__: Array(0)

//  \D - ищем не цифры.
//  \W - ищем не буквы.
//  \S - ищем не пробелы.
const str2 = 'R2D2';
console.log(str2.match(/\D/ig)); //ищем всё, кроме цифр.
// Получаем 
// 0: "R"
// 1: "D"
// length: 2
// __proto__: Array(0)